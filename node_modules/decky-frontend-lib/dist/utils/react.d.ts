import * as React from 'react';
declare global {
    interface Window {
        SP_REACT: typeof React;
    }
}
export declare function fakeRenderComponent(fun: Function, customHooks?: any): any;
export declare function wrapReactType(node: any, prop?: any): any;
export declare function wrapReactClass(node: any, prop?: any): any;
export declare function getReactRoot(o: HTMLElement | Element | Node): any;
export declare function getReactInstance(o: HTMLElement | Element | Node): any;
export interface findInTreeOpts {
    walkable?: string[];
    ignore?: string[];
}
export declare type findInTreeFilter = (element: any) => boolean;
export declare const findInTree: (parent: any, filter: findInTreeFilter, opts: findInTreeOpts) => any;
export declare const findInReactTree: (node: any, filter: findInTreeFilter) => any;
